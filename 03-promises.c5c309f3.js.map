{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAO,CACXC,gBAAiBH,SAASC,cAAc,uBACxCG,UAAWJ,SAASC,cAAc,sBAClCI,YAAaL,SAASC,cAAc,yBAwBtC,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIb,SAASQ,EAAgBT,EAAUC,GACjCS,EAAApB,GAASqB,OAAOC,QAAQ,qBAAqBZ,QAAeC,MAAW,CACrEY,cAAc,EACdC,QAAS,K,CAIb,SAASC,EAAaf,EAAUC,GAC9BS,EAAApB,GAASqB,OAAOK,QAAQ,oBAAoBhB,QAAeC,MAAW,CACpEY,cAAc,EACdC,QAAS,K,CA5CbtB,EAAKyB,iBAAiB,UAEtB,SAAwBC,GACtBA,EAAMC,iBACN,IAAIvB,gBAAEA,EAAeC,UAAEA,EAASC,YAAEA,GAAgBH,EAC9CyB,EAAW,EACXC,EAAQC,OAAO1B,EAAgB2B,OAEnC,IAAK,IAAIC,EAAI,EAAGA,EAAI1B,EAAYyB,MAAOC,IACrCzB,EAAcqB,EAAUC,GACrBI,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBQ,EAAgBT,EAAUC,EAAM,IAEjCyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBc,EAAaf,EAAUC,EAAM,IAEjCmB,IACAC,GAASC,OAAOzB,EAAU0B,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst refs = {\n  inputFirstDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n};\n\nform.addEventListener('submit', createPromises);\n\nfunction createPromises(event) {\n  event.preventDefault();\n  let { inputFirstDelay, inputStep, inputAmount } = refs;\n  let position = 1;\n  let delay = Number(inputFirstDelay.value);\n\n  for (let i = 0; i < inputAmount.value; i++) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        successNotiflix(position, delay);\n      })\n      .catch(({ position, delay }) => {\n        failNotiflix(position, delay);\n      });\n    position++;\n    delay += Number(inputStep.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction successNotiflix(position, delay) {\n  Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n    clickToClose: true,\n    timeout: 4000,\n  });\n}\n\nfunction failNotiflix(position, delay) {\n  Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n    clickToClose: true,\n    timeout: 4000,\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$refs","inputFirstDelay","inputStep","inputAmount","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$successNotiflix","$parcel$interopDefault","Notify","success","clickToClose","timeout","$47d4ff9957288465$var$failNotiflix","failure","addEventListener","event","preventDefault","position1","delay1","Number","value","i","then","catch"],"version":3,"file":"03-promises.c5c309f3.js.map"}